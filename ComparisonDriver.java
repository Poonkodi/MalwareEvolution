// Lets see github.

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;


public class ComparisonDriver {
	public static void writeComparisons(String base, File[] morphs, 
			String outfile,File uniq_opcode_file) throws IOException {
		// Base file
		File[] base_file = new File(base).listFiles();
		// Other morphed files
		List<File[]> file_lists = new ArrayList<File[]>();
		for (File m : morphs) {
			File[] mor_file = m.listFiles();
			file_lists.add(mor_file);
		}		
		BufferedWriter br = new BufferedWriter(new FileWriter(outfile));
		// Header.
		br.write("filename ,");
		for (File m : morphs) {
			br.write(m.getName() + "cosine, ");
			br.write(m.getName() + "mishras, ");
			br.write(m.getName() + "opcodegraph, ");
		}
		br.newLine();

		for (int i = 0; i < base_file.length; i++) {
			br.write(base_file[i].getName() + ", ");
			for (File[] ff : file_lists) {
				double cosine = CosineSimilarity.compareFiles(base_file[i], ff[i]);
				double mishra = MishrasMethod.compareFiles(base_file[i], ff[i]);
				double opcodgraph = GraphComparison.compareGraphs(
															OpcodeGraph.file2transMatrix(base_file[i],uniq_opcode_file),
															OpcodeGraph.file2transMatrix(ff[i],uniq_opcode_file));			
				br.write(cosine + ", " + mishra + ", " +opcodgraph+ ",");
				System.out.println("processing finished-- " +i+"-- "+ ff[i].getName());
			}
			br.newLine();
		}
		br.close();
		
		System.out.println("All comparisons are done--Check the score file");
	}	
	
	public static void main(String[] args) throws IOException {		
//		String base_dir = "/Users/vinodh/abitha/Fall2015/CS298/InputOpcodes/winwebsec/winweb_base/";
//		String base_dir="/Users/vinodh/abitha/Fall2015/CS298/InputOpcodes/mwor_opcodes/mwor_base/";
//		String base_dir="/Users/vinodh/abitha/Fall2015/CS298/InputOpcodes/zeroaccess_opcodes/zeroaccess_base/";
		String base_dir = "/Users/vinodh/abitha/Fall2015/CS298/InputOpcodes/zbot_opcodes/zbot_base/";


//		File uniq_opcodes=new File("/Users/vinodh/abitha/Fall2015/CS298/InputOpcodes/mwor_opcodes/mwor_uniq_symbols.txt");
//		File uniq_opcodes=new File("/Users/vinodh/abitha/Fall2015/CS298/InputOpcodes/winwebsec/winwebsec_uniq_symbols.txt");	
//		File uniq_opcodes=new File("/Users/vinodh/abitha/Fall2015/CS298/InputOpcodes/zeroaccess_opcodes/zeroaccess_uniq_symbols.txt");
		File uniq_opcodes=new File("/Users/vinodh/abitha/Fall2015/CS298/InputOpcodes/zbot_opcodes/zbot_uniq_symbols.txt");	

//		String outfile_dir="";
//		double ins_ratio = 0.0, subs_ratio = 0, trans_ratio = 0, del_ratio = 0.4;
//		CodeMorphingTool morpher = new CodeMorphingTool(uniq_opcodes);
//		morpher.writeMorph(base_dir, outfile_dir, ins_ratio, subs_ratio,
//				trans_ratio, del_ratio);
//		System.out.println("Morphing completed:check files");
//		
//		String morph_dir="/Users/vinodh/abitha/Fall2015/CS298/InputOpcodes/mwor_opcodes/mwor_ins_morph/";
//		String morph_dir="/Users/vinodh/abitha/Fall2015/CS298/InputOpcodes/zeroaccess_opcodes/zeroaccess_ins_morph/";
		String morph_dir="/Users/vinodh/abitha/Fall2015/CS298/InputOpcodes/zbot_opcodes/zbot_del_morph/";


		File[] morphs= new File(morph_dir).listFiles();
		String scorefile = 
				"/Users/vinodh/abitha/Fall2015/CS298/InputOpcodes/zbot_opcodes/zbot_scores/zbot_Deletionmorph.csv";
//				"/Users/vinodh/abitha/Fall2015/CS298/InputOpcodes/mwor_opcodes/mwor_scores/mwor_Insertionmorph.csv";
		writeComparisons(base_dir,morphs, scorefile,uniq_opcodes);	
	}
}
